name: qemu

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: QEMU NOCC boot test
    runs-on: ubuntu-latest
    steps:

      - name: Query coconut-svsm/qemu repo
        run: |
          QEMU_SHA=$(git ls-remote --exit-code https://github.com/coconut-svsm/qemu.git svsm-igvm | cut -f 1)
          echo "QEMU_SHA=${QEMU_SHA}" >> "$GITHUB_ENV"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 1

      # Workaround for actions-rs/toolchain@v1 actually installing
      # the requested versions.
      - name: Remove rust-toolchain.toml
        run: rm rust-toolchain.toml

      - name: Get QEMU form cache
        id: qemu_cache
        uses: actions/cache@v4
        with:
          path: tools
          key: tools-${{ env.QEMU_SHA }}

      - if: ${{ steps.qemu_cache.outputs.cache-hit != 'true' }}
        name: Install Rust x86_64-unknown-linux-gnu
        uses: actions-rs/toolchain@v1
        with:
            toolchain: '1.86.0'
            target: x86_64-unknown-linux-gnu
            profile: minimal
            override: false
            default: true

      - if: ${{ steps.qemu_cache.outputs.cache-hit != 'true' }}
        name: Install cbindgen
        run: cargo install cbindgen

      - if: ${{ steps.qemu_cache.outputs.cache-hit != 'true' }}
        name: Enable source repositories
        run: |
          sudo sed -i 's/^Types: deb/Types: deb deb-src/' /etc/apt/sources.list.d/ubuntu.sources
          sudo apt-get update

      - if: ${{ steps.qemu_cache.outputs.cache-hit != 'true' }}
        name: Build QEMU
        run: |
          # Update & install dependencies
          sudo apt-get install --yes git curl libcunit1-dev
          sudo apt-get build-dep --yes qemu

          OUT=$PWD/tools
          mkdir -p "$OUT"

          mkdir -p ../scratch
          pushd ../scratch

          # Build IGVM
          git clone https://github.com/microsoft/igvm.git \
            --branch=main \
            --single-branch \
            --depth=1

          pushd igvm
          PREFIX="$OUT" make -C igvm_c
          PREFIX="$OUT" make -C igvm_c install
          popd

          # Build Qmeu
          git clone https://github.com/coconut-svsm/qemu.git \
            --branch=svsm-igvm \
            --single-branch \
            --depth=1

          pushd qemu
          PKG_CONFIG_PATH="$OUT/lib64/pkgconfig" ./configure \
            --target-list=x86_64-softmmu \
            --enable-igvm --extra-ldflags=-L"$OUT/lib64" \
            --extra-cflags=-I"$OUT/include" \
            --enable-tcg \
            --enable-kvm \
            --enable-strip \
            --static \
            --disable-docs \
            --disable-user \
            --without-default-features \
            --prefix="$OUT"
          make -j "$(nproc)" install
          popd

          popd

      ## TODO: replace rebuild by a artifact download ?
      - name: Install Rust x86_64-unknown-none
        uses: actions-rs/toolchain@v1
        with:
            toolchain: '1.86.0'
            target: x86_64-unknown-none
            profile: minimal
            override: true

      - name: Install TPM 2.0 Reference Implementation build dependencies
        run: sudo apt install -y autoconf autoconf-archive pkg-config build-essential automake


      - name: Build SVSM
        run: ./build configs/qemu-target.json

      ########################

      - name: Run SVSM in QEMU
        run: bash .github/workflows/qemu_nocc_boot.sh

